---
title: "Sample Quarto Blog Post with Interactive Visualizations"
author: "Your Name"
date: "2023-07-15"
categories: [r, statistics, observable, visualization, interactive]
image: "image.jpg"
excerpt: "This is a sample Quarto blog post with code, visualizations, and interactive Observable JS elements."
format: 
  html:
    theme: cosmo
    css: styles.css
    minimal: true
    page-layout: article
    toc: false
    code-fold: false
    code-tools: true
    self-contained: true
    embed-resources: true
    include-in-header:
      - text: |
          <style>
            /* Hide all navigation elements */
            nav, header.navbar, .navbar, .quarto-navbar, .sidebar {
              display: none !important;
            }
            
            /* Make sure Observable outputs look good */
            .ojs-wrapper, .ojs-output-wrapper, .ojs-shell-container {
              background: transparent !important;
            }
          </style>
---

# Introduction to Quarto

Quarto is a multi-language, next-generation version of R Markdown from RStudio, built on Pandoc.

## Code Example

Here's a simple code example in R:

```{r}
#| label: simple-plot
#| fig-cap: "A simple scatter plot with regression line"
#| warning: false

library(ggplot2)

# Create some sample data
set.seed(123)
data <- data.frame(
  x = rnorm(100),
  y = rnorm(100)
)

# Create a scatter plot with regression line
ggplot(data, aes(x, y)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm") +
  theme_minimal() +
  labs(title = "Sample Scatter Plot",
       x = "X Variable",
       y = "Y Variable")
```

## Math Support

Quarto also supports LaTeX equations:

$$
f(x) = \int_{-\infty}^{\infty} \hat{f}(\xi) e^{2\pi i \xi x} d\xi
$$

## Interactive Features

Quarto enables interactive visualizations and applications with various JavaScript libraries. Here's an example using Observable JS with a slider to create an interactive visualization:

```{ojs}
//| label: interactive-chart
//| echo: true

viewof sliderValue = Inputs.range(
  [10, 100],
  {value: 50, step: 5, label: "Number of points:"}
)

// Generate random data based on the slider value
function generateData(n) {
  const data = [];
  for (let i = 0; i < n; i++) {
    data.push({
      x: Math.random() * 100,
      y: Math.random() * 100,
      size: Math.random() * 20 + 5
    });
  }
  return data;
}

// Create a scatter plot with the data
Plot.plot({
  grid: true,
  width: 600,
  height: 400,
  marginRight: 40,
  x: {label: "X Axis"},
  y: {label: "Y Axis"},
  color: {
    type: "linear",
    domain: [0, 100],
    range: ["steelblue", "orange"]
  },
  marks: [
    Plot.dot(
      generateData(sliderValue),
      {
        x: "x",
        y: "y",
        r: "size",
        fill: "x",
        fillOpacity: 0.7,
        stroke: "white",
        strokeWidth: 1
      }
    ),
    Plot.ruleY([0]),
    Plot.ruleX([0])
  ]
})
```

You can adjust the slider above to change the number of points in the visualization. This demonstrates how Observable JS provides interactive capabilities directly within Quarto documents.

## Conclusion

Quarto provides a unified authoring framework for data science, combining computation, visualization, and text.
